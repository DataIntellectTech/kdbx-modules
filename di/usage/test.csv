action,ms,bytes,lang,code,repeat,minver,comment

before,0,0,q,usage:use`di.usage,1,,Initialize package

before,0,0,q,.test.resethandlers:{.z.pw:{[x;y] 1b}; .z.po:{}; .z.pc:{}; .z.wo:{}; .z.wc:{}; .z.ws:{neg[.z.w] x}; .z.pg:{value x}; .z.ps:{value x}; .z.pp:{}; .z.exit:{};},1,1,funtion to reset handles to default
before,0,0,q,.test.clearusage:{.m.di.0usage.usage:0#.m.di.0usage.usage},1,1,function to clear usage table

before,0,0,q,.test.handlers: (`pw`po`pc`wo`wc`ws`pg`ps`ph`pp`exit),1,1,modified handlers
before,0,0,q,.test.customtracker:([]zcmd:`symbol$(); args:()),1,1,table to track custom handlers arguments
before,0,0,q,.test.resetcustomtracker:{.test.customtracker:0#.test.customtracker},1,1,function to clear customtracker table
before,0,0,q,.test.setcustomhandler:{[handler]handler set {[zcmd;args] `.test.customtracker upsert (zcmd;args)}[handler;];},1,1,funtion to apply custom functionality to handlers
before,0,0,q,.test.custompasshandler:{[handler]handler set {[zcmd;user;pass] `.test.customtracker upsert (zcmd;(user;pass))}[handler;;];},1,1,funtion to apply custom .z.pw handler

run,0,0,q,usage.init[],1,1,testing out-of-the-box logging configuration
run,0,0,q,.z.pw[`test_user;"pass123"],1,1,run args against each handle
run,0,0,q,.z.po 1i,1,1,
run,0,0,q,.z.pc 2i,1,1,
run,0,0,q,.z.wo 3i,1,1,
run,0,0,q,.z.wc 4i,1,1,
run,0,0,q,.z.pg "1+1",1,1,
run,0,0,q,.z.ps (+;2;2),1,1,
run,0,0,q,.z.ph (.j.j`x`y`z!(1;"http%3a%2f%2fdomain.com";`get);`hdr1`hdr2!("hello";"goodbye")),1,1,
run,0,0,q,.z.pp (.j.j`x`y`z!(1;"http%3a%2f%2fdomain.com";`post);`hdr1`hdr2!("hello";"goodbye")),1,1,
run,0,0,q,.z.exit 0,1,1,
run,0,0,q,.z.ps:{},1,1,swollow web socket response
run,0,0,q,.z.ws -8!"1+1",1,1,
true,0,0,q,(count .test.handlers) = count select distinct zcmd from usage.getusage[] where zcmd in .test.handlers,1,1,all handles must be logged at least once
run,0,0,q,.test.resethandlers[],1,1,restore default handles
run,0,0,q,.test.clearusage[],1,1,clear usage table

run,0,0,q,.test.resetcustomtracker[],1,1,clear custom tracker in case of test rerun
run,0,0,q,.test.setcustomhandler each .Q.dd[`.z] each .test.handlers,1,1,run with custom handlers and verify that they are wrapped and properly invoked after running usage.init
run,0,0,q,.test.custompasshandler `.z.pw,1,1,
run,0,0,q,usage.init[],1,1,initialize usage to wrap custom handlers
run,0,0,q,.z.pw[`test_user;"pass123"],1,1,run args against each handle
run,0,0,q,.z.po 1i,1,1,
run,0,0,q,.z.pc 2i,1,1,
run,0,0,q,.z.wo 3i,1,1,
run,0,0,q,.z.wc 4i,1,1,
run,0,0,q,.z.pg "1+1",1,1,
run,0,0,q,.z.ps (+;2;2),1,1,
run,0,0,q,.z.ph "dummy",1,1,
run,0,0,q,.z.pp "dummy",1,1,
run,0,0,q,.z.exit 255,1,1,
run,0,0,q,.z.ps:{},1,1,swollow web socket response
run,0,0,q,.z.ws -8!"1+1",1,1,
true,0,0,q,([]zcmd:`.z.pw`.z.po`.z.pc`.z.wo`.z.wc`.z.pg`.z.ps`.z.ph`.z.pp`.z.exit`.z.ws;args:((`test_user;"pass123");1i;2i;3i;4i;"1+1";(+;2;2);"dummy";"dummy";255;-8!"1+1"))~.test.customtracker,1,1, all handles/args must be logged in custom tracker table
true,0,0,q,(count .test.handlers) = count select distinct zcmd from usage.getusage[] where zcmd in .test.handlers,1,1,all handles must be logged at least once in main usage table
run,0,0,q,.test.resethandlers[],1,1,restore default handles
run,0,0,q,.test.clearusage[],1,1,clear usage table

true,0,0,q,@[usage.init;(enlist `logtodisk)!(enlist 1b);::]~"logname and logdir must be set to enable on disk usage logging. logToDisk disabled",1,1,testing diffren log configs / should error on invalid logging configurations
true,0,0,q,@[usage.init;(`logtodisk`logdir`logname)!(1b;".";"");::]~"logname and logdir must be set to enable on disk usage logging. logToDisk disabled",1,1,
true,0,0,q,@[usage.init;(`logtodisk`logdir`logname)!(1b;"";"test");::]~"logname and logdir must be set to enable on disk usage logging. logToDisk disabled",1,1,
run,0,0,q,.test.resethandlers[],1,1,restore default handles
run,0,0,q,.test.clearusage[],1,1,clear usage table

run,0,0,q,.test.defaultcreatelog:.m.di.0usage.createlog,1,1,
run,0,0,q,.m.di.0usage.createlog:{z;'"some error"},1,1,should fail if log file creation errors
true,0,0,q,@[usage.init;(`logtodisk`logdir`logname)!(1b;".";"test");::]like"Error creating log file: ./usage_test_* | Error: some error",1,1,
run,0,0,q,.m.di.0usage.createlog:.test.defaultcreatelog,1,1, default value
run,0,0,q,.test.resethandlers[],1,1,restore default handles
run,0,0,q,.test.clearusage[],1,1,clear usage table

run,0,0,q,@[system;"rm usage_test_* 2> /dev/null";::];,1,1,clean up in case of previous run
run,0,0,q,usage.init[(`logtodisk`logdir`logname)!(1b;".";"test")],1,1,test correctly write to and read from log file
run,0,0,q,.z.po 1i,1,1,
run,0,0,q,.z.pg "1+1",1,1,
run,0,0,q,.z.pg (avg;1 2 3),1,1,
run,0,0,q,.z.pc 1i,1,1,
true,0,0,q,usage.getusage[] ~ usage.readlog first system"ls usage_test_*",1,1,
run,0,0,q,system"rm usage_test_*",1,1,remove usage log file
run,0,0,q,.test.resethandlers[],1,1,restore default handles
run,0,0,q,.test.clearusage[],1,1,clear usage table

run,0,0,q,usage.init[(enlist `level)!(enlist 0)],1,1,test loging at different levels
run,0,0,q,.z.po 1i,1,1,
run,0,0,q,.z.pg"1+1",1,1,
run,0,0,q,.t.pg:.z.pg,1,1,
fail,0,0,q,.z.pg"1+`a",1,1,
run,0,0,q,.z.pc 1i,1,1,
true,0,0,q,0=count usage.getusage[],1,1,
run,0,0,q,.test.resethandlers[],1,1,restore default handles
run,0,0,q,.test.clearusage[],1,1,clear usage table
run,0,0,q,usage.init[(enlist `level)!(enlist 1)],1,1,log errors only
run,0,0,q,.z.po 1i,1,1,
run,0,0,q,.z.pg"1+1",1,1,
fail,0,0,q,.z.pg"1+`a",1,1,
run,0,0,q,.z.pc 1i,1,1,
true,0,0,q,(1=count usage.getusage[])&usage.getusage[][0;`zcmd`status`cmd`error]~(`pg;"e";"1+`a";"type"),1,1,
run,0,0,q,.test.resethandlers[],1,1,restore default handles
run,0,0,q,.test.clearusage[],1,1,clear usage table
run,0,0,q,usage.init[(enlist `level)!(enlist 2)],1,1,log open/close/queries (no "before" queries)
run,0,0,q,.z.ps"1+1",1,1,
run,0,0,q,(1=count usage.getusage[])&usage.getusage[][0;`zcmd`status`cmd]~(`ps;"c";"1+1"),1,1,
run,0,0,q,.test.resethandlers[],1,1,restore default handles
run,0,0,q,.test.clearusage[],1,1,clear usage table

run,0,0,q,usage.init[(`ignore`ignorelist)!(1b;(`upd;"0+0"))],1,1,test ignore list logging
run,0,0,q,upd:{y;},1,1,upd function for testing
run,0,0,q,fn:{y;},1,1,additional function for testing
run,0,0,q,.z.ps(+;1;2),1,1,not ignored
run,0,0,q,.z.ps(`upd;`trade;([]x:1 2)),1,1,ignored
run,0,0,q,.z.ps(`fn;`trade;([]x:1 2)),1,1,not ignored
run,0,0,q,.z.ps"0+0",1,1,ignored
run,0,0,q,.z.ps"1+0",1,1,not ignored
true,0,0,q,([]zcmd:`ps;status:6#"bc";cmd:(.Q.s1(+;1;2);.Q.s1(`fn;`trade;([]x:1 2));"1+0")where 3#2)~`zcmd`status`cmd#usage.getusage[],1,1,
run,0,0,q,.test.resethandlers[],1,1,restore default handles
run,0,0,q,.test.clearusage[],1,1,default value

run,0,0,q,usage.init[],1,1,test extension functionality
run,0,0,q,.test.ext:(),1,1,set to be empty in case of test rerun
run,0,0,q,"usage.setextension[{.test.ext,:enlist x}]",1,1,
run,0,0,q,.z.pw[`test_user;"pass123"],1,1,run args against each handle
run,0,0,q,.z.po 1i,1,1,
run,0,0,q,.z.pc 2i,1,1,
run,0,0,q,.z.wo 3i,1,1,
run,0,0,q,.z.wc 4i,1,1,
run,0,0,q,.z.ps:{},1,1,
run,0,0,q,.z.ws -8!"1+1",1,1,
run,0,0,q,.test.resethandlers[],1,1,
run,0,0,q,usage.init[],1,1,re-initialize message handlers
run,0,0,q,.z.pg"1+1",1,1,
run,0,0,q,.z.ps(+;2;2),1,1,
run,0,0,q,.z.ph(.j.j`x`y`z!(1;"http%3a%2f%2fdomain.com";`get);`hdr1`hdr2!("hello";"goodbye")),1,1,
run,0,0,q,.z.pp(.j.j`x`y`z!(1;"http%3a%2f%2fdomain.com";`post);`hdr1`hdr2!("hello";"goodbye")),1,1,
run,0,0,q,.z.exit 0,1,1,
true,0,0,q,usage.getusage[]~flip key[flip usage.getusage[]]!flip .test.ext,1,1,
run,0,0,q,.test.resethandlers[],1,1,
run,0,0,q,.test.clearusage[],1,1,
run,0,0,q,usage.clearextension[],1,1,reset extesnion function to default

run,0,0,q,usage.init[],1,1,test flushusage function
run,0,0,q,.m.di.0usage.usage:([]id:1 1 2 2 3;time:2025.07.24+0D12 0D12:00:00.1 0D12:01:59.999999999 0D12:02 0D12:05),1,1,test flush usage table fucntion
run,0,0,q,.m.di.0usage.currenttime:{2025.07.24D12:07}
run,0,0,q,usage.flushusage 0D00:05,1,1,
true,0,0,q,usage.getusage[]~([]id:2 3;time:2025.07.24+0D12:02 0D12:05),1,1,
run,0,0,q,usage.flushusage 5D,1,1,nop
true,0,0,q,usage.getusage[]~([]id:2 3;time:2025.07.24+0D12:02 0D12:05),1,1,
run,0,0,q,usage.flushusage 0,1,1,wipe
true,0,0,q,0=count usage.getusage[],1,1,
run,0,0,q,usage.flushusage 0D00:01,1,1,no effect on empty table
true,0,0,q,0=count usage.getusage[],1,1,
run,0,0,q,.m.di.0usage.currenttime:{[local] $[local;.z.P;.z.p]};,1,1,re define currenttime function
run,0,0,q,.m.di.0usage.usage: ([] time:`timestamp$(); id:`long$(); extime:`timespan$(); zcmd:`symbol$(); status:`char$(); a:`int$(); u:`symbol$(); w:`int$(); cmd:(); mem:(); sz:`long$(); error:()),1,1,
run,0,0,q,.test.resethandlers[],1,1,
run,0,0,q,.test.clearusage[],1,1,

run,0,0,q,usage.init[(enlist `test)!enlist 1b],1,1,pass a non config var to init
fail,0,0,q,key .m.di.0usage.test,1,1,

run,0,0,q,rerun:1b,1,,
